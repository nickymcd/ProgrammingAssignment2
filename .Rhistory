library("KernSmooth", lib.loc="C:/Program Files/R/R-3.2.1/library")
add2 <- function (x,y) {
x + y
}
add2(3,5)
above <- function (x,n) {
use <- x > n
x[use]
}
x<- 1:20
above (x,12)
above <- function (x,n = 10) {
use <- x > n
x[use]
above(x)
above <- function (x,n = 10) {
use <- x > n
x[use]
}
above (x)
}
above <- function (x,n = 10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] ,<- mean(y[,i])
}
means
}
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i],na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
demo()
demo(scoping)
library('swirl')
rm(list=ls())
swirl()
head(flags)
dim(flags)
clas(flags)
class(flags)
cls_list <-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- (sapply, class)
cls_vect <-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <-flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$landmasses, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
setwd("~/datascience/ProgrammingAssignment2")
